head	1.12;
access;
symbols;
locks
	tss:1.12; strict;
comment	@# @;


1.12
date	2013.02.16.06.33.30;	author tss;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.20.07.33.27;	author tss;	state Exp;
branches;
next	1.10;

1.10
date	2013.01.20.06.14.00;	author tss;	state Exp;
branches;
next	1.9;

1.9
date	2013.01.13.13.33.40;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.09.06.34.00;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2012.11.07.14.51.15;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2012.11.06.13.39.37;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2012.10.28.16.50.01;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2012.10.28.14.14.43;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.28.14.08.00;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.28.13.49.42;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.28.13.44.51;	author root;	state Exp;
branches;
next	;


desc
@@


1.12
log
@add license
@
text
@# VITOCHA Equipment Class
#    Equipment class has Server, Router and Bridge child class.
#
#Copyright (c) 2012-2013, Tsunehiko Suzuki
#All rights reserved.
#                                                                              
# Redistribution and use in source and binary forms, with or without           
# modification, are permitted provided that the following conditions           
# are met:                                                                     
# 1. Redistributions of source code must retain the above copyright            
#    notice, this list of conditions and the following disclaimer.             
# 2. Redistributions in binary form must reproduce the above copyright         
#    notice, this list of conditions and the following disclaimer in the       
#    documentation and/or other materials provided with the distribution.      
#                                                                              
# THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND           
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE        
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE          
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL   
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS      
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)        
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT   
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY    
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF       
# SUCH DAMAGE.                                                                 

# 	$Id: equipment.rb,v 1.11 2013/01/20 07:33:27 tss Exp tss $

class Equipment

  def initialize(jailname)
    @@name=jailname
    @@epairs=[]
    sh=Shell.new
    sh.transact{
      if jls("host.hostname").to_a.index("#{jailname}\n")==nil
        jailc(jailname)
        mt_devfs(jailname)
        mt_nullfs(jailname)
        jexec(jailname,"ifconfig lo0 127.0.0.1/24 up")
        jexec(jailname,"ipfw add allow ip from any to any")
      end
    }
  end

  def destroy
    puts "destroy #{@@name}"
    jname=@@name 
    sh=Shell.new
    sh.transact{
      ifnames=jexec(jname,"ifconfig -l").to_s.split(" ")
      epairs=ifnames.select{|item| item =~ /epair.*/}
      puts epairs
      epairs.each{|epair| 
        ifconfig("#{epair} -vnet #{jname}")
        ifconfig("#{epair} destroy")
      }
      bridges=ifnames.select{|item| item =~ /vbridge.*/}
      puts bridges
      bridges.each{|bridge|
        ifconfig("#{bridge} -vnet #{jname}")
        ifconfig("#{bridge} destroy")
      }
      puts "do umount_nullfs #{jname}"
      umt_nullfs(jname)
      puts "done umount_nullfs #{jname}"
      jail("-r",jname)
      puts "do umount_devfs #{jname}"
      umt_devfs(jname)
      puts "done umount_devfs #{jname}"
     }
  end

  def connect(epair)
    name=@@name 
    sh=Shell.new
    sh.transact{
      ifconfig("#{epair} vnet #{name}")
    }
  end

  def disconnect(epair)
    name=@@name 
    sh=Shell.new
    sh.transact{
      ifconfig("#{epair} -vnet #{name}")
    }
  end

  def assignip(epair,ip,mask)
    name=@@name 
    sh=Shell.new
    sh.transact{
      jexec(name,"ifconfig #{epair} inet #{ip} netmask #{mask}")
    }
  end

  def assignip6(epair,ip,prefixlen)
    name=@@name 
    sh=Shell.new
    sh.transact{
      jexec(name,"ifconfig #{epair} inet6 #{ip}/#{prefixlen}")
    }
  end

  def up(epair)
    name=@@name 
    sh=Shell.new
    sh.transact{
      jexec(name,"ifconfig #{epair} up")
    }
  end

  def down(epair)
    name=@@name 
    sh=Shell.new
    sh.transact{
      jexec(name,"ifconfig #{epair} down")
    }
  end

  def start(program)
    name=@@name
    sh=Shell.new
    sh.transact{
      jexec(name,"/usr/local/etc/rc.d/#{program} start")
    }
  end

  attr_accessor :epairs
end
@


1.11
log
@rm shbang
@
text
@d1 1
a1 2
# Internet Builder Equipment Class
#
d4 25
a28 4
# 	$Id: equipment.rb,v 1.10 2013/01/20 06:14:00 tss Exp tss $
#
# T.Suzuki
#
@


1.10
log
@add ipv6
@
text
@a0 2
#!/usr/local/bin/ruby
#
d5 1
a5 1
# 	$Id: equipment.rb,v 1.9 2013/01/13 13:33:40 root Exp root $
@


1.9
log
@add assignip6
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.8 2012/11/09 06:34:00 root Exp root $
d36 1
d42 1
d47 1
d49 1
d51 1
d53 1
@


1.8
log
@delete tomocha
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.7 2012/11/07 14:51:15 root Exp root $
a64 2
    $tomocha.unregister(epair,name)
    @@epairs.delete(epair)
d75 8
@


1.7
log
@add start
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.6 2012/11/06 13:39:37 root Exp root $
a56 2
    $tomocha.register(epair,name)
    @@epairs<< epair
d97 1
a97 1
      jexec(name,"/usr/local/etc/rc.d/#{program}")
@


1.6
log
@improve destroy
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.5 2012/10/28 16:50:01 root Exp root $
d95 8
@


1.5
log
@jls logic change
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.4 2012/10/28 14:14:43 root Exp root $
d34 14
a47 5
       ifnames=jexec(jname,"ifconfig -l").to_s.split(" ").select{|item| item =~ /epair.*/}
       ifnames.each{|epair| ifconfig("#{epair} -vnet #{jname}")}
       umt_nullfs(jname)
       jail("-r",jname)
       umt_devfs(jname)
@


1.4
log
@delete net.inet.ip.forwarding
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.3 2012/10/28 14:08:00 root Exp root $
d19 1
a19 1
      if jls("-j",jailname).to_a.size == 1
@


1.3
log
@tomocha to global
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.2 2012/10/28 13:49:42 root Exp root $
a22 1
        jexec(jailname,"sysctl -w net.inet.ip.forwarding=1")
@


1.2
log
@make equipment super class for router,bridge,server.
@
text
@d7 1
a7 1
# 	$Id: equipment.rb,v 1.1 2012/10/28 13:44:51 root Exp root $
d49 1
a49 1
    tomocha.register(epair,name)
d59 1
a59 1
    tomocha.unregister(epair,name)
@


1.1
log
@Initial revision
@
text
@d2 7
a8 2
# Internet Builder Router Class
# 	$Id: router.rb,v 1.5 2012/10/28 13:18:54 root Exp $
d12 1
a12 9
# man
# router=Router.new(jailname) : create a router
# router.up(epair)  : ifconfig <epair> up
# router.down(epair)  : ifconfig <epair> down
# router.connect(epair)  : connect epair to me
# router.assingip(epair,ip,mask) : ifconfig <epair> inet <ip> netmask <mask>
# router.destroy : jail -r in safe manner
 
class Router
@
